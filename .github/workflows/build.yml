name: build
on:
  push:
    branches:
    - main
    - feature/migrate-to-zf-and-gha
    tags:
    - '*'
  pull_request:
    branches:
    - main
  workflow_dispatch:
    inputs:
      forcePublish:
        description: When true the Publish stage will always be run, otherwise it only runs for tagged versions.
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write  # enable cache clean-up
  checks: write  # enable test result annotations
  contents: write  # enable creating releases
  issues: read
  packages: write  # enable publishing packages
  pull-requests: write  # enable test result annotations

jobs:
  build:
    name: Run Build
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.run_build.outputs.semver }}
      major: ${{ steps.run_build.outputs.major }}
      majorMinor: ${{ steps.run_build.outputs.majorMinor }}
      preReleaseTag: ${{ steps.run_build.outputs.preReleaseTag }}

    steps:
    - uses: endjin/Endjin.RecommendedPractices.GitHubActions/actions/prepare-env-vars-and-secrets@main
      id: prepareEnvVarsAndSecrets
      with:
        environmentVariablesYaml: |
          ZF_NUGET_PUBLISH_SOURCE: ${{ startsWith(github.ref, 'refs/tags/') && 'https://api.nuget.org/v3/index.json' || format('https://nuget.pkg.github.com/{0}/index.json', github.repository_owner) }}
        secretsYaml: |
          NUGET_API_KEY: ${{ startsWith(github.ref, 'refs/tags/') && secrets.NUGET_APIKEY || secrets.BUILD_PUBLISHER_PAT }}
          AzureServicesAuthConnectionString: ''
          APPINSIGHTS_INSTRUMENTATIONKEY: ''
          AzureWebJobsStorage: ${{ secrets.TESTS_AZURESTORAGECONNECTIONSTRING }}
          TenancyClient__TenancyServiceBaseUri: ${{ vars.TESTS_MARAINTENANCYBASEURL }}
          TenancyClient__ResourceIdForMsiAuthentication: ${{ vars.TESTS_MARAINTENANCYRESOURCEIDFORMSIAUTHENTICATION }}
          Operations__ControlServiceBaseUrl: ${{ vars.TESTS_MARAINOPERATIONSCONTROLBASEURL }}
          Operations__ResourceIdForMsiAuthentication: ${{ vars.TESTS_MARAINOPERATIONSCONTROLRESOURCEID }}
          TestBlobStorageConfiguration__ConnectionStringPlainText: ${{ secrets.TESTS_AZURESTORAGECONNECTIONSTRING }}
          TestStorageConfiguration__ConnectionStringPlainText: ${{ secrets.TESTS_AZURESTORAGECONNECTIONSTRING }}
          TestCosmosConfiguration__AccountUri: ${{ vars.TESTS_COSMOSDBACCOUNTURI }}
          TestCosmosConfiguration__AccessKeyInKeyVault__SecretName: ${{ vars.TESTS_COSMOSDBKEYSECRETNAME }}
          TestCosmosConfiguration__AccessKeyInKeyVault__VaultName: ${{ vars.TESTS_KEYVAULTNAME }}
          TestCosmosConfiguration__DisableTenantIdPrefix: true
          TestSqlConfiguration__ConnectionStringInKeyVault__SecretName: ${{ vars.TESTS_SQLDBCONNECTIONSTRINGSECRETNAME }}
          TestSqlConfiguration__ConnectionStringInKeyVault__VaultName: ${{ vars.TESTS_KEYVAULTNAME }}
          MarainServiceConfiguration:ServiceDisplayName: ${{ vars.TESTS_MARAINWORKFLOWSERVICEDISPLAYNAME}}
          MarainServiceConfiguration:ServiceTenantId: ${{ vars.TESTS_MARAINWORKFLOWSERVICETENANTID }}
          LeasingStorageAccountConnectionString: ${{ secrets.TESTS_AZURESTORAGECONNECTIONSTRING }}
          TenantedWorkflowEngineFactoryConfiguration__CloudEventBaseSourceName: 'azuresubscriptionid.workflowresourcegroupname'
        secretsEncryptionKey: ${{ secrets.SHARED_WORKFLOW_KEY}}

    - uses: endjin/Endjin.RecommendedPractices.GitHubActions/actions/run-build-process@main
      id: run_build
      with:
        netSdkVersion: '8.x'
        runsOn: windows-latest
        # workflow_dispatch inputs are always strings, the type property is just for the UI
        forcePublish: ${{ github.event.inputs.forcePublish == 'true' }}
        buildEnv: ${{ steps.prepareEnvVarsAndSecrets.outputs.environmentVariablesYamlBase64 }}
        buildSecrets: ${{ steps.prepareEnvVarsAndSecrets.outputs.secretsYamlBase64 }}
        buildAzureCredentials: ${{ secrets.TESTS_KV_READER_CREDENTIALS }}
        secretsEncryptionKey: ${{ secrets.SHARED_WORKFLOW_KEY }}
        token: ${{ secrets.GITHUB_TOKEN }}
