trigger:
  branches:
    include:
    - master
  tags:
    include:
    - '*'

resources:
  repositories:
    - repository: recommended_practices
      type: github
      name: endjin/Endjin.RecommendedPractices.AzureDevopsPipelines.GitHub
      endpoint: marain-github

jobs:
- template: templates/build.and.release.yml@recommended_practices
  parameters:
    vmImage: 'windows-latest'
    service_connection_nuget_org: $(Endjin_Service_Connection_NuGet_Org)
    service_connection_github: $(Endjin_Service_Connection_GitHub)
    solution_to_build: $(Endjin_Solution_To_Build)
    postCustomEnvironmentVariables:
      - powershell: |
          Write-Host "##vso[task.setvariable variable=AzureServicesAuthConnectionString]$Env:ENDJIN_AZURESERVICESAUTHCONNECTIONSTRING"
          Write-Host "##vso[task.setvariable variable=AzureWebJobsStorage]$Env:ENDJIN_AZURESTORAGECONNECTIONSTRING"
          Write-Host "##vso[task.setvariable variable=RootTenantBlobStorageConfigurationOptions__AccountName]$Env:ENDJIN_AZURESTORAGECONNECTIONSTRING"
          Write-Host "##vso[task.setvariable variable=RootTenantCosmosConfigurationOptions__AccountUri]$Env:ENDJIN_COSMOSDBACCOUNTURI"
          Write-Host "##vso[task.setvariable variable=RootTenantCosmosConfigurationOptions__AccountKeySecretName]$Env:ENDJIN_COSMOSACCOUNTKEYSECRETNAME"
          Write-Host "##vso[task.setvariable variable=RootTenantCosmosConfigurationOptions__KeyVaultName]$Env:ENDJIN_KEYVAULTNAME"
          Write-Host "##vso[task.setvariable variable=LeasingStorageAccountConnectionString]$Env:ENDJIN_AZURESTORAGECONNECTIONSTRING"
        displayName: 'Set Custom Environment Variables'
        env:
          ENDJIN_AZURESERVICESAUTHCONNECTIONSTRING: $(Endjin_AzureServicesAuthConnectionString)
          ENDJIN_AZURESTORAGECONNECTIONSTRING: $(Endjin_AzureStorageConnectionString)
          ENDJIN_COSMOSDBACCOUNTURI: $(Endjin_CosmosDbAccountUri)
          ENDJIN_COSMOSACCOUNTKEYSECRETNAME: $(Endjin_CosmosDbKeySecretName)
          ENDJIN_KEYVAULTNAME: $(Endjin_KeyVaultName)
      - task: Npm@1
        displayName: 'Install Latest Azure Functions V3 Runtime'
        inputs:
          command: custom
          verbose: false
          customCommand: 'install -g azure-functions-core-tools@3 --unsafe-perm true'
      - task: MSBuild@1
        displayName: 'Build SQL DACPAC'
        inputs:
          solution: '**/Marain.Workflow.SqlDatabase.sln' 
          configuration: $(BuildConfiguration)
    postPack:
      - task: CopyFiles@2
        displayName: 'Copy DACPACs To Release Folder'
        inputs:
          Contents: |
            **/bin/$(BuildConfiguration)/*.dacpac
          TargetFolder: '$(Build.ArtifactStagingDirectory)/Release/DACPACs'
          flattenFolders: true