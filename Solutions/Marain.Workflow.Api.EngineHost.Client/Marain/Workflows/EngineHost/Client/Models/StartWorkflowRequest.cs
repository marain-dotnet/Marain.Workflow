// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Marain.Workflows.EngineHost.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class StartWorkflowRequest
    {
        /// <summary>
        /// Initializes a new instance of the StartWorkflowRequest class.
        /// </summary>
        public StartWorkflowRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StartWorkflowRequest class.
        /// </summary>
        /// <param name="workflowId">The unique Id of the workflow to start the
        /// instance from</param>
        /// <param name="requestId">Unique Id for this request</param>
        /// <param name="workflowInstanceId">The Id of the new workflow
        /// instance</param>
        public StartWorkflowRequest(string workflowId, string requestId = default(string), string workflowInstanceId = default(string), IDictionary<string, object> context = default(IDictionary<string, object>))
        {
            RequestId = requestId;
            WorkflowId = workflowId;
            WorkflowInstanceId = workflowInstanceId;
            Context = context;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for StartWorkflowRequest class.
        /// </summary>
        static StartWorkflowRequest()
        {
            ContentType = "application/vnd.marain.workflows.hosted.startworkflowinstancerequest";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique Id for this request
        /// </summary>
        [JsonProperty(PropertyName = "requestId")]
        public string RequestId { get; set; }

        /// <summary>
        /// Gets or sets the unique Id of the workflow to start the instance
        /// from
        /// </summary>
        [JsonProperty(PropertyName = "workflowId")]
        public string WorkflowId { get; set; }

        /// <summary>
        /// Gets or sets the Id of the new workflow instance
        /// </summary>
        [JsonProperty(PropertyName = "workflowInstanceId")]
        public string WorkflowInstanceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "context")]
        public IDictionary<string, object> Context { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contentType")]
        public static string ContentType { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (WorkflowId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WorkflowId");
            }
        }
    }
}
