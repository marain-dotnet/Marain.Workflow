// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Marain.Workflows.Client
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// This is an entry point for new messages into the Marain Workflow
    /// service. Messages can be POSTed to the provided endpoint to be enqueued
    /// and executed by the engine. This endpoint should be used in
    /// high-traffic scenarios as it is designed to use a queuing mechanism
    /// that can deal with large amounts of incoming traffic.
    /// </summary>
    public partial interface IMarainWorkflowMessageIngestion : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Send a new trigger into the workflow engine
        /// </summary>
        /// <param name='tenantId'>
        /// The tenant within which the request should operate
        /// </param>
        /// <param name='body'>
        /// New trigger to be processed by the engine
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationHeaderResponse<SendTriggerHeaders>> SendTriggerWithHttpMessagesAsync(string tenantId, Trigger body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Send a request to start a new workflow instance into the workflow
        /// engine
        /// </summary>
        /// <param name='tenantId'>
        /// The tenant within which the request should operate
        /// </param>
        /// <param name='body'>
        /// Details of the new workflow instance to be started
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationHeaderResponse<SendStartNewWorkflowInstanceRequestHeaders>> SendStartNewWorkflowInstanceRequestWithHttpMessagesAsync(string tenantId, StartNewWorkflowInstanceRequest body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// View swagger definition for this API
        /// </summary>
        /// <remarks>
        /// View swagger definition for this API
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetSwaggerWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
